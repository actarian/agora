{"version":3,"file":"src/js/main.server.js","sources":["../../src/environment/environment.js","../../src/js/main.server.js"],"sourcesContent":["export const environment = {\n\tappKey: 'ab4289a46cd34da6a61fd8d66774b65f',\n\tappCertificate: '',\n\tchannelName: 'Channel',\n\tport: 5000,\n};\n","const express = require('express');\nconst path = require('path');\nconst { RtcTokenBuilder, RtmTokenBuilder, RtcRole, RtmRole } = require('agora-access-token');\n\nimport { environment } from '../environment/environment';\n\nconst PORT = process.env.PORT || environment.port;\n\nconsole.log(environment);\n\nvar app = express();\n\napp.disable('x-powered-by');\n\napp.use(express.static(path.join(__dirname, '../../docs/')));\n\n// app.use(express.favicon());\n\n/*\napp.get('/', function(request, response) {\n\tresponse.send('Hello World!');\n});\n*/\n\n/*\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\napp.get('/', (request, response) => response.render('pages/index'));\n*/\n\n// app.set('view engine', 'handlebars');\n\napp.get('/', function(request, response) {\n\tresponse.sendFile(path.join(__dirname + '../../docs/index.html'));\n\t// response.render('docs/index');\n});\n\napp.post('/api/token/rtc', function(request, response) {\n\tconst duration = 3600;\n\tconst timestamp = Math.floor(Date.now() / 1000);\n\tconst expirationTime = timestamp + duration;\n\tconst uid = request.uid || timestamp;\n\tconst role = RtcRole.PUBLISHER;\n\tconst token = RtcTokenBuilder.buildTokenWithUid(environment.appKey, environment.appCertificate, environment.channelName, uid, role, expirationTime);\n\tconsole.log('/api/token/rtc', token);\n\tresponse.send(JSON.stringify({\n\t\ttoken: token,\n\t}));\n});\n\napp.post('/api/token/rtm', function(request, response) {\n\tconst duration = 3600;\n\tconst timestamp = Math.floor(Date.now() / 1000);\n\tconst expirationTime = timestamp + duration;\n\tconst uid = request.uid || timestamp;\n\tconst role = RtmRole.PUBLISHER;\n\tconst token = RtmTokenBuilder.buildTokenWithUid(environment.appKey, environment.appCertificate, environment.channelName, uid, role, expirationTime);\n\tconsole.log('/api/token/rtm', token);\n\tresponse.send(JSON.stringify({\n\t\ttoken: token,\n\t}));\n});\n\napp.listen(PORT, () => {\n\tconsole.log(`Listening on ${ PORT }`);\n});\n\n// IMPORTANT! Build token with either the uid or with the user account. Comment out the option you do not want to use below.\n\n// Build token with uid\n// const token = RtcTokenBuilder.buildTokenWithUid(environment.appKey, environment.appCertificate, environment.channelName, uid, role, expirationTime);\n\n// Build token with user account\n// const token = RtcTokenBuilder.buildTokenWithAccount(environment.appKey, environment.appCertificate, environment.channelName, account, role, expirationTime);\n"],"names":["environment","appKey","appCertificate","channelName","port","express","require","path","RtcTokenBuilder","RtmTokenBuilder","RtcRole","RtmRole","PORT","process","env","console","log","app","disable","use","static","join","__dirname","get","request","response","sendFile","post","duration","timestamp","Math","floor","Date","now","expirationTime","uid","role","PUBLISHER","token","buildTokenWithUid","send","JSON","stringify","listen"],"mappings":";;;;;;;;AAAO,IAAMA,WAAW,GAAG;AAC1BC,EAAAA,MAAM,EAAE,kCADkB;AAE1BC,EAAAA,cAAc,EAAE,EAFU;AAG1BC,EAAAA,WAAW,EAAE,SAHa;AAI1BC,EAAAA,IAAI,EAAE;AAJoB,CAApB;;ACAP,IAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;eAC+DA,OAAO,CAAC,oBAAD;IAA9DE,2BAAAA;IAAiBC,2BAAAA;IAAiBC,mBAAAA;IAASC,mBAAAA;AAInD,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoBZ,WAAW,CAACI,IAA7C;AAEAW,OAAO,CAACC,GAAR,CAAYhB,WAAZ;AAEA,IAAIiB,GAAG,GAAGZ,OAAO,EAAjB;AAEAY,GAAG,CAACC,OAAJ,CAAY,cAAZ;AAEAD,GAAG,CAACE,GAAJ,CAAQd,OAAO,CAACe,MAAR,CAAeb,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,aAArB,CAAf,CAAR;;AAIA;;;;;;AAMA;;;;;AAMA;;AAEAL,GAAG,CAACM,GAAJ,CAAQ,GAAR,EAAa,UAASC,OAAT,EAAkBC,QAAlB,EAA4B;AACxCA,EAAAA,QAAQ,CAACC,QAAT,CAAkBnB,IAAI,CAACc,IAAL,CAAUC,SAAS,GAAG,uBAAtB,CAAlB,EADwC;AAGxC,CAHD;AAKAL,GAAG,CAACU,IAAJ,CAAS,gBAAT,EAA2B,UAASH,OAAT,EAAkBC,QAAlB,EAA4B;AACtD,MAAMG,QAAQ,GAAG,IAAjB;AACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,GAAL,KAAa,IAAxB,CAAlB;AACA,MAAMC,cAAc,GAAGL,SAAS,GAAGD,QAAnC;AACA,MAAMO,GAAG,GAAGX,OAAO,CAACW,GAAR,IAAeN,SAA3B;AACA,MAAMO,IAAI,GAAG1B,OAAO,CAAC2B,SAArB;AACA,MAAMC,KAAK,GAAG9B,eAAe,CAAC+B,iBAAhB,CAAkCvC,WAAW,CAACC,MAA9C,EAAsDD,WAAW,CAACE,cAAlE,EAAkFF,WAAW,CAACG,WAA9F,EAA2GgC,GAA3G,EAAgHC,IAAhH,EAAsHF,cAAtH,CAAd;AACAnB,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BsB,KAA9B;AACAb,EAAAA,QAAQ,CAACe,IAAT,CAAcC,IAAI,CAACC,SAAL,CAAe;AAC5BJ,IAAAA,KAAK,EAAEA;AADqB,GAAf,CAAd;AAGA,CAXD;AAaArB,GAAG,CAACU,IAAJ,CAAS,gBAAT,EAA2B,UAASH,OAAT,EAAkBC,QAAlB,EAA4B;AACtD,MAAMG,QAAQ,GAAG,IAAjB;AACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,GAAL,KAAa,IAAxB,CAAlB;AACA,MAAMC,cAAc,GAAGL,SAAS,GAAGD,QAAnC;AACA,MAAMO,GAAG,GAAGX,OAAO,CAACW,GAAR,IAAeN,SAA3B;AACA,MAAMO,IAAI,GAAGzB,OAAO,CAAC0B,SAArB;AACA,MAAMC,KAAK,GAAG7B,eAAe,CAAC8B,iBAAhB,CAAkCvC,WAAW,CAACC,MAA9C,EAAsDD,WAAW,CAACE,cAAlE,EAAkFF,WAAW,CAACG,WAA9F,EAA2GgC,GAA3G,EAAgHC,IAAhH,EAAsHF,cAAtH,CAAd;AACAnB,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BsB,KAA9B;AACAb,EAAAA,QAAQ,CAACe,IAAT,CAAcC,IAAI,CAACC,SAAL,CAAe;AAC5BJ,IAAAA,KAAK,EAAEA;AADqB,GAAf,CAAd;AAGA,CAXD;AAaArB,GAAG,CAAC0B,MAAJ,CAAW/B,IAAX,EAAiB,YAAM;AACtBG,EAAAA,OAAO,CAACC,GAAR,mBAA6BJ,IAA7B;AACA,CAFD;AAMA;AACA;AAEA;AACA"}